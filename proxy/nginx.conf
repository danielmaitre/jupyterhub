http {
     include mime.types;
     default_type application/octet-stream;
     
     map $http_upgrade $connection_upgrade {
     	 default upgrade;
	 '' close;
     }

    upstream jh {
        server jupyterhub:443;
    }





    server {
    	   listen 80;
    	   server_name _;
    	   rewrite        ^ https://$host$request_uri? permanent;
	   }


    server {
        listen 443;
	server_name _;
	ssl on;
	ssl_certificate /etc/nginx/mycert.pem;
    	ssl_certificate_key /etc/nginx/mykey.key;
	add_header X-Frame-Options SAMEORIGIN;
	
        location / {
            proxy_pass https://jh;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
	    proxy_set_header Host $host;
	    proxy_read_timeout 86400; # neccessary to avoid websocket timeout disconnect
            proxy_redirect off;
   	    proxy_connect_timeout 300;
	    client_max_body_size 50M;
        }

	location ~* /(user/[^/]*)/(api/kernels/[^/]+/channels|terminals/websocket)/? {
             proxy_pass https://jh;

	     proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header Host $host;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;

             proxy_set_header X-NginX-Proxy true;

             # WebSocket support
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             proxy_read_timeout 86400;

	}

	location /notes/ {
		 root /usr/share/nginx/html;
		 index index.html;

	}

	location '/.well-known/acme-challenge' {
        	 default_type "text/plain";
        	 root /tmp/letsencrypt-auto;
    		 }
    }


}
events {
       worker_connections 1024;
}


